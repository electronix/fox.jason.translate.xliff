<?xml version="1.0" encoding="UTF-8"?><!--
	This file is part of the DITA Translate project.
	See the accompanying LICENSE file for applicable licenses.
--><project name="fox.jason.translate.xliff">


	<!-- 
		Pre-processing for all XLIFF operations, ensure that we have
		an XMLCatalog and set property defaults.
	-->
	<target name="xliff.init">

		<typedef file="${dita.plugin.fox.jason.translate.xliff.dir}/resource/antlib.xml"/>

		<property name="translate.customization.dir" value="${dita.plugin.fox.jason.translate.xliff.dir}/xsl"/>
		<property name="translate.resource.dir" value="${dita.plugin.fox.jason.translate.xliff.dir}/resource"/>

		<dirname property="args.input.dir" file="${args.input}"/>

		<xmlcatalog id="fake.dita.catalog">
			<dtd publicId="-//OASIS//DTD DITA Topic//EN" location="${translate.resource.dir}/fake.dtd"/>
			<dtd publicId="-//OASIS//DTD DITA Map//EN" location="${translate.resource.dir}/fake.dtd"/>
			<dtd publicId="-//OASIS//DTD DITA BookMap//EN" location="${translate.resource.dir}/fake.dtd"/>
			<dtd publicId="-//OASIS//DTD DITA DITAVAL//EN" location="${translate.resource.dir}/fake.dtd"/>
			<dtd publicId="-//OASIS//DTD DITA Concept//EN" location="${translate.resource.dir}/fake.dtd"/>
			<dtd publicId="-//OASIS//DTD DITA Task//EN" location="${translate.resource.dir}/fake.dtd"/>
		</xmlcatalog>
	</target>

	<!-- 
		Pre processing for translation operations, ensure that XMLTask
		is available and we have some processing dirs in temp
	--> 
	<target name="trans-unit.init" depends="xliff.init">
		<taskdef classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpath="${dita.plugin.fox.jason.translate.xliff.dir}/lib/xmltask.jar" name="xmltask"/>

		<mkdir dir="${dita.temp.dir}/stage1" />
		<mkdir dir="${dita.temp.dir}/stage2" />
	</target>

		
	<!-- 
		Extract an XLIFF File and skeleton files from DITA
	-->
	<target name="xliff-extract">
		<!-- Add a unique md5 id to each dita element containing text -->
		<xslt taskname="md5-src-gen" destdir="${dita.temp.dir}/md5"  extension=".dita.xml" style="${translate.customization.dir}/add-md5-src.xsl"  			basedir="${args.input.dir}" includes="*.dita,**/*.dita">
			<xmlcatalog refid="fake.dita.catalog"/>
		</xslt>
		<!-- Add a unique md5 id to each ditamap element containing text -->
		<xslt taskname="md5-src-gen" destdir="${dita.temp.dir}/md5"  extension=".ditamap.xml" style="${translate.customization.dir}/add-md5-src.xsl"  			basedir="${args.input.dir}"  includes="*.ditamap,**/*.ditamap">
			<xmlcatalog refid="fake.dita.catalog"/>
		</xslt>
		
		<!-- Generate the skeleton files -->
		<xslt taskname="skeleton-gen" destdir="${output.dir}/skl"  extension=".skl" style="${translate.customization.dir}/dita2skeleton.xsl"
			basedir="${dita.temp.dir}/md5">
			<xmlcatalog refid="fake.dita.catalog"/>
		</xslt>

		<fileset id="skl.contents" dir="${output.dir}/skl" casesensitive="yes">
  			<include name="**/*.dita.skl"/>
  			<include name="**/*.ditamap.skl"/>
		</fileset>
		<reinsert-doctypes refid="skl.contents" dir="${output.dir}/skl"/>
		<!-- 
			Generate a series of XLIFF files iterating each unique
			md5 id 
		-->
		<xslt taskname="xliff-gen" destdir="${dita.temp.dir}/xliff"  extension=".xlf" style="${translate.customization.dir}/dita2xliff.xsl"  
			basedir="${dita.temp.dir}/md5">
			<xmlcatalog refid="fake.dita.catalog"/>
			<param expression="${dita.temp.dir}/md5" name="SOURCE" />
			<param expression="${dita.temp.dir}/skl" name="SKELETON"/>

			<fileset dir="${dita.temp.dir}/md5">
				<include name="**/*.dita"/>
				<include name="**/*.ditamap"/>
			</fileset>
		</xslt>

		<!-- Merge the XLIFF files into one larger file -->
		<xslt taskname="xliff-merge" force="true" in="${translate.customization.dir}/xliff-merge.xsl" out="${output.dir}/translate.xlf" style="${translate.customization.dir}/xliff-merge.xsl">
			<xmlcatalog refid="fake.dita.catalog"/>
			<param expression="${dita.temp.dir}/xliff/" name="in"/>
		</xslt>
	</target>


	

	<!-- 
		Take an untraslated XLIFF File and request translations
		of the source into the specified target langauge.
	-->
	<target name="trans-source">
		<!-- Extract each source language element to a file -->
		<xmltask taskname="xliff-read"  source="${args.input}">
			<call path="//trans-unit">
				<param default="" name="id" path="@id"/>
				<actions>
					<xmltask taskname="source-get" source="${args.input}">
						<copy path="//trans-unit[@id=@{id}]/source" buffer="buffer"/>
					</xmltask>
					<xmltask sourcebuffer="buffer" dest="${dita.temp.dir}/stage1/@{id}.xml"/>
				</actions>
			</call>
		</xmltask>
		<!-- Remove the souce tag to leave only the data within the source element -->
		<xslt taskname="source-xsl" destdir="${dita.temp.dir}/stage2"  extension=".xml" 
			style="${translate.customization.dir}/trans-unit.xsl"  
			basedir="${dita.temp.dir}/stage1">
		</xslt>

		<!-- now do the processing -->

		<!-- ... etc -->

		<!-- Take the processed text and replace the target element -->
		<xmltask taskname="xliff-read" source="${args.input}">
			<call path="//trans-unit">
				<param default="" name="id" path="@id"/>
				<actions>
					<xmltask taskname="target-put" source="${args.input}" dest="${args.input}">
						<insert path="//trans-unit[@id=@{id}]/target" 
							file="${dita.temp.dir}/stage2/@{id}.xml"/>
					</xmltask>
				</actions>
			</call>
		</xmltask>
	</target>


	<target name="trans-target">
		<!-- Extract each target language element to a file -->
		<xmltask taskname="xliff-read" source="${args.input}">
			<call path="//trans-unit">
				<param default="" name="id" path="@id"/>
				<actions>
					<xmltask taskname="target-get" source="${args.input}">
						<copy path="//trans-unit[@id=@{id}]/target" buffer="buffer"/>
					</xmltask>
					<xmltask sourcebuffer="buffer" dest="${dita.temp.dir}/stage1/@{id}.xml"/>
				</actions>
			</call>
		</xmltask>

		<!-- 
			For each <target> language element in the XLIFF file, extract only the data
			within the tag and transform it back into DITA format
		-->
		<xslt taskname="target-xsl" destdir="${dita.temp.dir}/stage2"  extension=".xml" 
			style="${translate.customization.dir}/trans-unit.xsl"  
			basedir="${dita.temp.dir}/stage1">
		</xslt>

		<!-- Copy over unprocessed skeleton files into output dir -->
		<xmltask taskname="xliff-read"  source="${args.input}">
			<call path="xliff/file">
				<param default="" name="original" path="@original"/>
				<param default="" name="skeleton" path="*[name()='header']/*[name()='skl']/*[name()='external-file']/@href"/>
				<actions>
					<copy file="${args.input.dir}/@{skeleton}" tofile="${output.dir}/@{original}"/>
				</actions>
			</call>
		</xmltask>


		<!-- Replace the placeholders in the skeleton files -->
		<fileset id="translated.dita" dir="${dita.temp.dir}/stage2" casesensitive="yes">
  			<include name="**/*.xml"/>
		</fileset>
		<skeleton-files src="translated.dita" dir="${dita.temp.dir}/stage2"/>

	</target>



	<target name="dita2xliff-extract" depends="build-init, xliff.init, xliff-extract"/>
	<target name="dita2xliff-translate" depends="build-init, trans-unit.init, trans-source"/>
	<target name="dita2xliff2dita" depends="build-init, trans-unit.init, trans-target"/>
</project>