<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--ant-->
<!--
	This file is part of the DITA-OT Translate Plug-in project.
	See the accompanying LICENSE file for applicable licenses.
-->
<antlib xmlns:if="ant:if" xmlns:unless="ant:unless">

	<!--
		Iterator function to run a given macro against a set of files

		@param macro - A macro to run.
		@param fileset - A set of files
	-->
	<scriptdef language="javascript" name="iterate">
		<attribute name="macro"/>
		<attribute name="dir"/>
		<attribute name="todir"/>
		<element name="fileset" type="fileset"/>
<![CDATA[

var filesets = elements.get("fileset");
var macro = attributes.get("macro");
var dir = attributes.get("dir");
var todir = attributes.get("todir");

for (i = 0; i < filesets.size(); ++i) {
    fileset = filesets.get(i);
    scanner = fileset.getDirectoryScanner(project);
    scanner.scan();
    files = scanner.getIncludedFiles();
    for( j=0; j < files.length; j++) {
		var task = project.createTask(macro);
		if (files[i] !== "") {
	        try {
	        	task.setDynamicAttribute("file", dir + '/' + files[j]);
	        	task.setDynamicAttribute("todir", todir);
	            task.execute();
	        } catch(err) {
	            task.log( "Execution error: " + err.message );
	        }
		}
	}
}

]]>
	</scriptdef>

	<!--
		Reinserts a doctype into a file

		@param file    - The DITA file to clean up
	-->
	<scriptdef language="javascript" name="reinsert-doctype">
		<attribute name="file"/>
		<attribute name="todir"/>
<![CDATA[

var pluginDir =  project.getProperty("dita.plugin.fox.jason.translate.xliff.dir");
var file = attributes.get("file");

eval('' + org.apache.tools.ant.util.FileUtils.readFully(
      new java.io.FileReader(pluginDir + '/resource/translate.js' ) ) );

var dita = org.apache.tools.ant.util.FileUtils.readFully(
				new java.io.FileReader(file));
var tidy = Translate.addDoctype(dita);
Translate.writeDITA(file, tidy);

]]>
	</scriptdef>


	<macrodef name="skeleton-file">
		<attribute name="file"/>
		<attribute name="todir" default=""/>
		<sequential>
			<local name="target.dita.id"/>
			<local name="placeholder.text"/>
			<local name="token.id"/>

			<basename property="target.dita.id" file="@{file}" suffix=".xml"/>
			<loadfile property="placeholder.text" srcFile="@{file}"/>
			<property name="token.id">@@@@@${target.dita.id}@@@@@</property>

			<replace dir="${output.dir}" token="${token.id}" value="${placeholder.text}">
				<include name="**/*"/>
			</replace>
		</sequential>
	</macrodef>



	<macrodef name="translate-source">
		<attribute name="file"/>
		<attribute name="todir"/>
		<sequential>
			<local name="source.text"/>
			<local name="source.file.name"/>

			<replace if:set="translate.bing" file="@{file}" token="&quot;" value="\&quot;"/>
			<loadfile property="source.text" srcFile="@{file}"/>
			<basename property="source.file.name" file="@{file}"/>


			<!-- Create a translated target file -->
			<dummy-translate if:set="translate.dummy" src="${source.text}" out="@{todir}/${source.file.name}"/> 
			<watson-translate if:set="translate.watson" src="${source.text}" out="@{todir}/${source.file.name}"/>
			<bing-translate if:set="translate.bing" src="${source.text}" out="@{todir}/${source.file.name}"/>
			<custom-translate if:set="translate.custom" src="${source.text}" out="@{todir}/${source.file.name}"/>


			<local name="target.text"/>
			<loadfile property="target.text" srcFile="@{todir}/${source.file.name}"/>
			<echo level="error" message="${target.text}"/>

		</sequential>
	</macrodef>

	<macrodef name="dummy-translate">
		<attribute name="src"/>
		<attribute name="out"/>
		<sequential>
			<echo file="@{out}" message="@{src}"/>
		</sequential>
	</macrodef>

	<macrodef name="watson-translate">
		<attribute name="src"/>
		<attribute name="out"/>
		<sequential>
			<fail/>
		</sequential>
	</macrodef>

	<macrodef name="bing-translate">
		<attribute name="src"/>
		<attribute name="out"/>
		<sequential>

			<local name="bing.result"/>
			<local name="bing.out"/>

			<local name="bing.temp.file"/>
			<local name="bing.response"/>
			<local name="bing.translation"/>
			
			<tempfile deleteonexit="true" destdir="${dita.temp.dir}" 
				property="bing.temp.file" suffix=".txt"/>

			<exec taskname="bing-translate" executable="curl" osfamily="unix" 
				resultproperty="bing.result" outputproperty="bing.out">
				<arg value="-X"/>
				<arg value="POST"/>
			
				<arg value="-H"/>
				<arg value="Ocp-Apim-Subscription-Key: ${bing.apikey}"/>
				<arg value="-H"/>
				<arg value="Content-type: application/json"/>
				<arg value="-H"/>
				<arg value="Accept: application/json"/>
				<arg value="--output"/>
				<arg value="${bing.temp.file}"/>
				<arg value="--data"/>
				<arg value="[{&quot;Text&quot;: &quot;@{src}&quot;}]"/>
				<arg value="-sS"/>
				<arg value="${bing.translate.url}?api-version=3.0&amp;from=en&amp;to=de&amp;textType=html"/>
			</exec>
			<loadfile property="bing.response" srcFile="${bing.temp.file}"/>
			<bing-read-response text="${bing.response}" outproperty="bing.translation"/>
			<echo message="${bing.translation}" file="@{out}"/>
		</sequential>
	</macrodef>

	<scriptdef language="javascript" name="bing-read-response">
		<attribute name="text"/>
		<attribute name="outproperty"/>
<![CDATA[
var text = attributes.get("text");
var outproperty = attributes.get("outproperty");
var json =  JSON.parse(text);
project.setProperty(outproperty, json[0].translations[0].text.replace('\"', '"'));
]]>
	</scriptdef>

	<macrodef name="custom-translate">
		<attribute name="src"/>
		<attribute name="out"/>
		<sequential>
			<fail/>
		</sequential>
	</macrodef>

	<!--
		Add a doctype to a directory containing DITA files

		@param toDir - The output location of the files
		@param dir  - The location of the files to process
		@param refid - The reference to a fileset
	-->
	<macrodef name="reinsert-doctypes">
		<attribute name="refid"/>
		<attribute name="dir"/>
		<sequential>
			<iterate macro="reinsert-doctype" dir="@{dir}">
				<fileset refid="@{refid}"/>
			</iterate>
		</sequential>
	</macrodef>


	<!--
		Replace skelton placeholders with content

		@param dir  - The location of the files to process
		@param refid - The reference to a fileset
	-->
	<macrodef name="skeleton-files">
		<attribute name="src"/>
		<attribute name="dir"/>
		<sequential>
			<iterate macro="skeleton-file" dir="@{dir}">
				<fileset refid="@{src}"/>
			</iterate>
		</sequential>
	</macrodef>

	<!--
		Auto translate source trans-units

		@param dir  - The location of the files to process
		@param refid - The reference to a fileset
	-->
	<macrodef name="translate-sources">
		<attribute name="src"/>
		<attribute name="dir"/>
		<attribute name="todir"/>
		<sequential>
			<iterate macro="translate-source" dir="@{dir}" todir="@{todir}">
				<fileset refid="@{src}"/>
			</iterate>
		</sequential>
	</macrodef>


	<!--
		Ensure that the Bing Translation service is authorized
	-->
	<macrodef name="bing-authorization">
		<sequential>
			<local name="bing.result"/>
			<local name="bing.out"/>
			<tempfile deleteonexit="true" destdir="${dita.temp.dir}" 
				property="bing.auth.temp.file" suffix=".txt"/>

			<exec taskname="bing-auth" executable="curl" osfamily="unix" 
				resultproperty="bing.result" outputproperty="bing.out">
				<arg value="-X"/>
				<arg value="POST"/>
			
				<arg value="-H"/>
				<arg value="Ocp-Apim-Subscription-Key: ${bing.apikey}"/>
				<arg value="-H"/>
				<arg value="Content-type: application/x-www-form-urlencoded"/>
				<arg value="-H"/>
				<arg value="Content-length: 0"/>
				<arg value="--output"/>
				<arg value="${bing.auth.temp.file}"/>
				<arg value="-sS"/>
				<arg value="${bing.authentication.url}"/>
			</exec>
			<echo taskname="auth-bing" level="verbose" message="${line.separator}${bing.out}"/>
			<loadfile property="bing.bearer.token" srcFile="${bing.auth.temp.file}"/>

			<dita-ot-fail id="XLFF004F">
				<condition>
					<contains string="${bing.bearer.token}" substring="error"/>
				</condition>
			</dita-ot-fail>
		</sequential>
	</macrodef>

</antlib>